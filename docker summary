# docker : 
- virtualization software 
- make dev & deploying easier
- package application with all necessary dependencies
- portable artifact, easily shared

## container

- run simple docker command
- run different versions


 ## docker vs VM

- docker virtualize the OS application layer
while VM virtualize both application layer and OS Kernel( complete OS )

- as result docker image is smaller 

- docker container are linux based to run it on windows we need doker desktop ( hypervisor layer with linux light distro ) 

## docker image vs container

- image is the application package 
- container is a running instance of an image
- you can run multiple containers for 1 image

## docker registries
a storage and distribution system for Docker images "docker hub"
- 
## Commands

docker pull <image>
docker run -d <image> ( detached mode)
docker run -d -p 9000:80 <image> ( bind container port to host port)
-- use container id
docker start <container_id>
docker stop <container_id>

- use container names
docker run --name web-app -d -p <host_port:container_port>  <image> ( add a specific container name)


## private docker registry for company

## Docker registry vs Repository :

- registry a service providing storage : aws ecr , docker hub
- collection of repositories
- a repository : collection of related images: same name different versions



## Create a docker image
create a Dockerfile
```
FROM node:alpine-1.2
COPY package.json /app/
COPY src /app/
WORKDIR /app
RUN nm install

CMD ["node", "server.js"]

## Build image
docker build -t <image-name:tag> . (current folder where dockerfile is located)  ( -t or --tag set a name and optional tag "name:tag")


```
